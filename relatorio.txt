################################################################################
#                                IME-USP (2018)                                #
#              MAC0219 - Programacao Concorrente e Paralela - EP1              #
#                                                                              #
#                                  Relatorio                                   #
#                                                                              #
#                       Marcelo Schmitt   - NUSP 9297641                       #
#                       Raphael R. Gusmao - NUSP 9778561                       #
################################################################################

    ...Texto...

################################################################################

O EP1 recebe como argumentos:
    - implementation:
        A implementacao que sera utilizada
        ("p" = Pthreads, "o" = OpenMP, "s" = Sequential)
    - matrix_A
        O caminho da matriz A
    - matrix_B
        O caminho da matriz B
    - matrix_C
        O caminho da matriz C

Para executar o EP1 no terminal, digite:
    $ make
    $ ./main <Implementation> <matrix_A> <matrix_B> <matrix_C>

################################################################################

Media de tempo das implementacoes:
    Pthreads   : ? s
    OpenMP     : ? s
    Sequential : ? s

- Foram executados X? testes com cada implementacao.

- Os testes foram realizados com matrizes A(1400 x 1500) * B(1500  x  1600)  com
  numeros reais aleatorios uniformemente distribuidos entre -100 e 100.

- Para gerar matrizes desse tipo, digite:
    $ python test.py

- As matrizes serao salvas em "matrix/A_python.txt" e "matrix/B_python.txt"

- Ha tambem uma funcao que verifica se a resposta esta correta.  Basta  comentar
  as linhas 59 e 58, descomentar a linha 57 do arquivo "test.py" e digitar:
    $ python test.py

################################################################################

Exemplo de saida (Pthreads):
+------------------------------------------------------------------------------+
| Reading inputs...
|
| ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[ START ]
| A(1400 x 1500) * B(1500 x 1600) = C(1400 x 1600)
| Pthreads
| Matrix A divided into 8*125 = 1000 blocks
| Matrix B divided into 125*8 = 1000 blocks
| Threads working: 64
| ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[ END ]
| Multiplication time: 9.59447 s
|
| Saving output...
+------------------------------------------------------------------------------+

Exemplo de saida (OpenMP):
+------------------------------------------------------------------------------+
| Reading inputs...
|
| ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[ START ]
| A(1400 x 1500) * B(1500 x 1600) = C(1400 x 1600)
| OpenMP
| Matrix A divided into 8*125 = 1000 blocks
| Matrix B divided into 125*8 = 1000 blocks
| Threads working: 64
| ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[ END ]
| Multiplication time: 10.7925 s
|
| Saving output...
+------------------------------------------------------------------------------+

Exemplo de saida (Sequential):
+------------------------------------------------------------------------------+
| Reading inputs...
|
| ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[ START ]
| A(1400 x 1500) * B(1500 x 1600) = C(1400 x 1600)
| Sequential
| Threads working: 1
| ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[ END ]
| Multiplication time: 104.534 s
|
| Saving output...
+------------------------------------------------------------------------------+

################################################################################
